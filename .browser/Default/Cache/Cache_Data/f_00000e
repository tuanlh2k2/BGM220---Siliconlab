{"availableCount":81,"searchTerms":[],"userState":"8e064ec4-2266-444e-8512-3f63933371b3","resources":[{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.esf.com.silabs.template.external.com.silabs.sdk.stack.super.bootloader.Gecko Bootloader.BGAPI_UART_DFU_Bootloader_3.2.3._640221276.1.12.0._1297798766","text":"BGAPI UART DFU Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_accelerometer_bma400/README.md"],"description":"This project aims to implement an accelerometer application using Silicon Labs development kits and external sensors integrated with the BLE wireless stack.","id":"template.uc.compatibleSDK.bluetooth_accelerometer_bma400_i2c.bluetooth_accelerometer_bma400/SimplicityStudio/bluetooth_accelerometer_bma400_i2c.slcp","text":"Bluetooth - Accelerometer (BMA400) - I2C","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement an accelerometer application using Silicon Labs development kits and external sensors integrated with the BLE wireless stack."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_accelerometer_bma400/README.md"],"description":"This project aims to implement an accelerometer application using Silicon Labs development kits and external sensors integrated with the BLE wireless stack.","id":"template.uc.compatibleSDK.bluetooth_accelerometer_bma400_spi.bluetooth_accelerometer_bma400/SimplicityStudio/bluetooth_accelerometer_bma400_spi.slcp","text":"Bluetooth - Accelerometer (BMA400) - SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement an accelerometer application using Silicon Labs development kits and external sensors integrated with the BLE wireless stack."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_apple_notification_center_service/README.md"],"description":"This example demonstrates how to receive Apple Notification Center Service (ANCS) Notifications, such as phone calls, calendar events, and so on and print them out to the VCOM.","id":"template.uc.compatibleSDK.bt_ancs.bluetooth_apple_notification_center_service/SimplicityStudio/bt_ancs.slcp","text":"Bluetooth - Apple Notification Center Service","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates how to receive Apple Notification Center Service (ANCS) Notifications, such as phone calls, calendar events, and so on and print them out to the VCOM."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_co_monitor/README.md"],"description":"This project aims to implement a CO application using Silabs development kits and external sensors integrated with the BLE wireless stack. The wireless CO system composed of a sensor and a (at least one) client device. The sensor  periodically measures the CO level and advertises the processed CO level value to the Client Devices.","id":"template.uc.compatibleSDK.bt_co_client.bluetooth_co_monitor/bt_co_client/SimplicityStudio/bt_co_client.slcp","text":"Bluetooth - CO Monitor (MQ7) - Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement a CO application using Silabs development kits and external sensors integrated with the BLE wireless stack. The wireless CO system composed of a sensor and a (at least one) client device. The sensor  periodically measures the CO level and advertises the processed CO level value to the Client Devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_co_monitor/README.md"],"description":"This project aims to implement a CO application using Silabs development kits and external sensors integrated with the BLE wireless stack. The wireless CO system composed of a sensor and a (at least one) client device. The sensor  periodically measures the CO level and advertises the processed CO level value to the Client Devices.","id":"template.uc.compatibleSDK.bt_co_sensor.bluetooth_co_monitor/bt_co_sensor/SimplicityStudio/bt_co_sensor.slcp","text":"Bluetooth - CO Monitor (MQ7) - Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement a CO application using Silabs development kits and external sensors integrated with the BLE wireless stack. The wireless CO system composed of a sensor and a (at least one) client device. The sensor  periodically measures the CO level and advertises the processed CO level value to the Client Devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_container_level_detection/README.md"],"description":"The sensor device measures the distance between the distance sensor and the content of the container. The sensor device calculates the average distance and advertises it via BLE.","id":"template.uc.compatibleSDK.bluetooth_container_level_detection_client.bluetooth_container_level_detection/SimplicityStudio/bluetooth_container_level_detection_client.slcp","text":"Bluetooth - Container Level Detection (VL53L1X) - Client","priority":9999999,"category":"SOFTWARE","toolTipText":"  The sensor device measures the distance between the distance sensor and the content of the container. The sensor device calculates the average distance and advertises it via BLE."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_container_level_detection/README.md"],"description":"The sensor device measures the distance between the distance sensor and the content of the container. The sensor device calculates the average distance and advertises it via BLE.","id":"template.uc.compatibleSDK.bluetooth_container_level_detection_sensor.bluetooth_container_level_detection/SimplicityStudio/bluetooth_container_level_detection_sensor.slcp","text":"Bluetooth - Container Level Detection (VL53L1X) - Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"  The sensor device measures the distance between the distance sensor and the content of the container. The sensor device calculates the average distance and advertises it via BLE."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_controlling_led_from_smartphone/README.md"],"description":"This example shows how to develop a simple software to control the Wireless Development Kit's LEDs with a mobile phone application.","id":"template.uc.compatibleSDK.bluetooth_controlling_led_from_smartphone.bluetooth_controlling_led_from_smartphone/SimplicityStudio/bluetooth_controlling_led_from_smartphone.slcp","text":"Bluetooth - Controlling LED from Smartphone","priority":9999999,"category":"SOFTWARE","toolTipText":"This example shows how to develop a simple software to control the Wireless Development Kit's LEDs with a mobile phone application."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_door_lock_fingerprint/README.md"],"description":"This example is used for a BLE-based device lock system using one Silabs EFR32xG24 Explorer kit and various hardware components such as MikroE Fingerprint Click 2 (A-172-MRQ) and SparkFun Micro OLED Breakout (Qwiic). The system is using BLE for wireless communication. This example also is the foundation to develop a secure and convenient device system using biometric authentication (fingerprint) and LED display indication. The system will use BLE for wireless communication between the Silabs board and the EFR connect mobile application.","id":"template.uc.compatibleSDK.bt_doorlock_fingerprint.bluetooth_door_lock_fingerprint/SimplicityStudio/bt_doorlock_fingerprint.slcp","text":"Bluetooth - Door Lock Fingerprint (A-172-MRQ)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example is used for a BLE-based device lock system using one Silabs EFR32xG24 Explorer kit and various hardware components such as MikroE Fingerprint Click 2 (A-172-MRQ) and SparkFun Micro OLED Breakout (Qwiic). The system is using BLE for wireless communication. This example also is the foundation to develop a secure and convenient device system using biometric authentication (fingerprint) and LED display indication. The system will use BLE for wireless communication between the Silabs board and the EFR connect mobile application."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/README.md"],"description":"This project aims to implement a door lock application using Silabs development kits and external sensors integrated with the BLE wireless stack.","id":"template.uc.compatibleSDK.bt_door_lock_rfid.bluetooth_door_lock_rfid/SimplicityStudio/bluetooth_door_lock_rfid.slcp","text":"Bluetooth - Door Lock RFID (ID-12LA)","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement a door lock application using Silabs development kits and external sensors integrated with the BLE wireless stack."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_dosimeter/README.md"],"description":"This application gets the information about the radiation     level from the sender via BLE (Bluetooth Low Energy) and then display it on the OLED for visualization. A buzzer is also used to notify users when the radiation level  crosses the threshold.","id":"template.uc.compatibleSDK.bt_dosimeter_client.bluetooth_dosimeter/bluetooth_dosimeter_client/SimplicityStudio/bluetooth_dosimeter_client.slcp","text":"Bluetooth - Dosimeter (Sparkfun Type 5) - Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This application gets the information about the radiation     level from the sender via BLE (Bluetooth Low Energy) and then display it on the OLED for visualization. A buzzer is also used to notify users when the radiation level  crosses the threshold."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_dosimeter/README.md"],"description":"This application uses the dosimeter (Sparkfun Type 5) to measure     the radiation level of the ambient space and the report this information to another device that     place outside of the radioactive zone.","id":"template.uc.compatibleSDK.bt_dosimeter_sensor.bluetooth_dosimeter/bluetooth_dosimeter_sensor/SimplicityStudio/bluetooth_dosimeter_sensor.slcp","text":"Bluetooth - Dosimeter (Sparkfun Type 5) - Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"This application uses the dosimeter (Sparkfun Type 5) to measure     the radiation level of the ambient space and the report this information to another device that     place outside of the radioactive zone."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_em4_energy_mode_ibeacon/README.md"],"description":"This code example shows the use of sleep mode EM4 in a Bluetooth iBeacon Application. The device will operate in deep sleep mode EM4 after advertising iBeacon packet in 5s. It will stay in EM4 for 15s but users can force the device to wake up from EM4 immediately by pushing Button.","id":"template.uc.compatibleSDK.bt_em4_energy_mode_ibeacon.bluetooth_em4_energy_mode_ibeacon/SimplicityStudio/bluetooth_em4_energy_mode_ibeacon.slcp","text":"Bluetooth - EM4 Energy Mode in iBeacon Application","priority":9999999,"category":"SOFTWARE","toolTipText":"This code example shows the use of sleep mode EM4 in a Bluetooth iBeacon Application. The device will operate in deep sleep mode EM4 after advertising iBeacon packet in 5s. It will stay in EM4 for 15s but users can force the device to wake up from EM4 immediately by pushing Button."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_hid_keyboard/README.md"],"description":"This is an example for Bluetooth LE HID device development, which can connect wirelessly to HID hosts including Windows, Mac, Android and iOS systems.","id":"template.uc.compatibleSDK.bluetooth_hid_keyboard.bluetooth_hid_keyboard/SimplicityStudio/bluetooth_hid_keyboard.slcp","text":"Bluetooth - HID Keyboard","priority":9999999,"category":"SOFTWARE","toolTipText":"This is an example for Bluetooth LE HID device development, which can connect wirelessly to HID hosts including Windows, Mac, Android and iOS systems."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_log_system/README.md"],"description":"This example introduces a simple implementation of logging on EFR32 based devices.","id":"template.uc.compatibleSDK.bt_log_system_rtt.bluetooth_log_system/SimplicityStudio/bt_log_system_rtt.slcp","text":"Bluetooth - Log System via RTT","priority":9999999,"category":"SOFTWARE","toolTipText":"This example introduces a simple implementation of logging on EFR32 based devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_log_system/README.md"],"description":"This example introduces a simple implementation of logging on EFR32 based devices.","id":"template.uc.compatibleSDK.bt_log_system_vcom.bluetooth_log_system/SimplicityStudio/bt_log_system_vcom.slcp","text":"Bluetooth - Log System via VCOM (UART)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example introduces a simple implementation of logging on EFR32 based devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_man_in_the_middle/README.md"],"description":"This project shows the implementation of Man In The Middle with BLE.","id":"template.uc.compatibleSDK.bt_man_in_the_middle.bluetooth_man_in_the_middle/SimplicityStudio/bt_man_in_the_middle.slcp","text":"Bluetooth - Man-In-The-Middle","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows the implementation of Man In The Middle with BLE."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_multicentral_multiperipheral_dual_topology/README.md"],"description":"This code example demonstrates how to handle multiple (simultaneous) connections, when the device has to act as central on some of the connections, and peripheral on the rest of the connections.","id":"template.uc.compatibleSDK.bt_multicentral_multiperipheral_dual_topology.bluetooth_multicentral_multiperipheral_dual_topology/SimplicityStudio/bluetooth_multicentral_multiperipheral_dual_topology.slcp","text":"Bluetooth - Multi-Central Multi-Peripheral Dual Topology","priority":9999999,"category":"SOFTWARE","toolTipText":"This code example demonstrates how to handle multiple (simultaneous) connections, when the device has to act as central on some of the connections, and peripheral on the rest of the connections."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/ncp/readme.html"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example does not have a GATT database, but makes it possible to build one from the application using Dynamic GATT API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.ncp.example/ncp/ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example does not have a GATT database, but makes it possible to build one from the application using Dynamic GATT API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/ncp_empty/readme.html"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example contains a minimal GATT database, and cannot be used with host applications that use Dynamic GATT API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.ncp_empty.example/ncp_empty/ncp_empty.slcp","text":"Bluetooth - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example contains a minimal GATT database, and cannot be used with host applications that use Dynamic GATT API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_ota_firmware_update_in_user_application/README.md"],"description":"This project aims to implement firmware upgrade method used in SoC-mode Bluetooth applications. A Gecko Bootloader (GBL) image containing the new firmware is sent to target device via a Bluetooth connection.","id":"template.uc.compatibleSDK.bt_ota_firmware_update_in_user_application.bluetooth_ota_firmware_update_in_user_application/SimplicityStudio/bt_ota_firmware_update_in_user_application.slcp","text":"Bluetooth - OTA Firmware Update in User Application","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement firmware upgrade method used in SoC-mode Bluetooth applications. A Gecko Bootloader (GBL) image containing the new firmware is sent to target device via a Bluetooth connection."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_operation_time_measurement/README.md"],"description":"This project proposes the development of an application that uses the Silabs BG22 Bluetooth SoC Explorer Kits and Mikroe ACCEL 5 CLICK board and Adafruit IS31FL3741 components to monitor the operation time of machineries and display the information graphically. The application will use BLE for wireless communication between the devices.","id":"template.uc.compatibleSDK.bluetooth_operation_time_measurement_client.bluetooth_operation_time_measurement/bluetooth_operation_time_measurement_client/SimplicityStudio/bluetooth_operation_time_measurement_client.slcp","text":"Bluetooth - Operation Time Measurement (BMA400) - Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This project proposes the development of an application that uses the Silabs BG22 Bluetooth SoC Explorer Kits and Mikroe ACCEL 5 CLICK board and Adafruit IS31FL3741 components to monitor the operation time of machineries and display the information graphically. The application will use BLE for wireless communication between the devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_operation_time_measurement/README.md"],"description":"This project proposes the development of an application that uses the Silabs BG22 Bluetooth SoC Explorer Kits and Mikroe ACCEL 5 CLICK board and Adafruit IS31FL3741 components to monitor the operation time of machineries and display the information graphically. The application will use BLE for wireless communication between the devices.","id":"template.uc.compatibleSDK.bluetooth_operation_time_measurement_sensor.bluetooth_operation_time_measurement/bluetooth_operation_time_measurement_sensor/SimplicityStudio/bluetooth_operation_time_measurement_sensor.slcp","text":"Bluetooth - Operation Time Measurement (BMA400) - Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"This project proposes the development of an application that uses the Silabs BG22 Bluetooth SoC Explorer Kits and Mikroe ACCEL 5 CLICK board and Adafruit IS31FL3741 components to monitor the operation time of machineries and display the information graphically. The application will use BLE for wireless communication between the devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_people_counting_ak9753/README.md"],"description":"This project aims to implement a people counting application using Silabs development kits and external sensors integrated with the BLE wireless stack.","id":"template.uc.compatibleSDK.bluetooth_people_counting_ak9753.bluetooth_people_counting_ak9753/SimplicityStudio/bluetooth_people_counting_ak9753.slcp","text":"Bluetooth - People Counting (AK9753)","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement a people counting application using Silabs development kits and external sensors integrated with the BLE wireless stack."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/rcp/readme.html"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.rcp.example/rcp/rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_rssi_positioning/README.md"],"description":"An asset device application intended to showcase a room finder or asset locator service using the BLE stack on Silicon Laboratories development kits.","id":"template.uc.compatibleSDK.bluetooth_indoor_positioning_asset.bluetooth_rssi_positioning/Asset/SimplicityStudio/bluetooth_indoor_positioning_asset.slcp","text":"Bluetooth - RSSI Positioning - Asset","priority":9999999,"category":"SOFTWARE","toolTipText":"An asset device application intended to showcase a room finder or asset locator service using the BLE stack on Silicon Laboratories development kits."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_rssi_positioning/README.md"],"description":"A gateway device application intended to showcase a room finder or asset locator service using the BLE stack on Silicon Laboratories development kits.","id":"template.uc.compatibleSDK.bluetooth_indoor_positioning_gateway.bluetooth_rssi_positioning/Gateway/SimplicityStudio/bluetooth_indoor_positioning_gateway.slcp","text":"Bluetooth - RSSI Positioning - Gateway","priority":9999999,"category":"SOFTWARE","toolTipText":"A gateway device application intended to showcase a room finder or asset locator service using the BLE stack on Silicon Laboratories development kits."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_secure_attestation/README.md"],"description":"This project aims to implement a secure attestation over Bluetooth Low Energy for client device. The client acts as a central device for the accompanying server.","id":"template.uc.compatibleSDK.bt_secure_attestation_client.bluetooth_secure_attestation/bt_secure_attestation_client/SimplicityStudio/bt_secure_attestation_client.slcp","text":"Bluetooth - Secure Attestation - Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement a secure attestation over Bluetooth Low Energy for client device. The client acts as a central device for the accompanying server."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_secure_attestation/README.md"],"description":"This project aims to implement a secure attestation over Bluetooth Low Energy for server device. The server acts in the BLE peripheral role and allows a central/client to connect to it.","id":"template.uc.compatibleSDK.bt_secure_attestation_server.bluetooth_secure_attestation/bt_secure_attestation_server/SimplicityStudio/bt_secure_attestation_server.slcp","text":"Bluetooth - Secure Attestation - Server","priority":9999999,"category":"SOFTWARE","toolTipText":"This project aims to implement a secure attestation over Bluetooth Low Energy for server device. The server acts in the BLE peripheral role and allows a central/client to connect to it."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_serial_port_profile/README.md"],"description":"This example provides a simple template for SPP-like communication (also know as wire replacement), where Bluetooth serves as a transport channel for serial communication between server and client.","id":"template.uc.compatibleSDK.bluetooth_serial_port_profile_client.bluetooth_serial_port_profile/bt_spp_client/SimplicityStudio/bt_serial_port_profile_client.slcp","text":"Bluetooth - Serial Port Profile (SPP) - Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example provides a simple template for SPP-like communication (also know as wire replacement), where Bluetooth serves as a transport channel for serial communication between server and client."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/repos/bluetooth_applications/bluetooth_serial_port_profile/README.md"],"description":"This example provides a simple template for SPP-like communication (also know as wire replacement), where Bluetooth serves as a transport channel for serial communication between server and client.","id":"template.uc.compatibleSDK.bluetooth_serial_port_profile_server.bluetooth_serial_port_profile/bt_spp_server/SimplicityStudio/bt_serial_port_profile_server.slcp","text":"Bluetooth - Serial Port Profile (SPP) - Server","priority":9999999,"category":"SOFTWARE","toolTipText":"This example provides a simple template for SPP-like communication (also know as wire replacement), where Bluetooth serves as a transport channel for serial communication between server and client."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_aoa_asset_tag/readme.html"],"description":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA).","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_aoa_asset_tag.example/soc_aoa_asset_tag/soc_aoa_asset_tag.slcp","text":"Bluetooth - SoC AoA Asset Tag","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA)."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_blinky/readme.html"],"description":"The classic blinky example using Bluetooth communication. From the EFR Connect mobile app, the LED controller button toggles LED0 on the board. In addition, on the board pressing or releasing BTN0 notifies the app. This is a demonstration of a simple two-way data exchange over GATT.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_blinky.example/soc_blinky/soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. From the EFR Connect mobile app, the LED controller button toggles LED0 on the board. In addition, on the board pressing or releasing BTN0 notifies the app. This is a demonstration of a simple two-way data exchange over GATT.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_empty/readme.html"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. It contains a minimal GATT database that can be expanded to fit your application requirements. The application starts advertising after boot and restarts advertising after a connection is closed. It also supports Over-the-Air Device Firmware Upgrade (OTA DFU).","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_empty.example/soc_empty/soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. It contains a minimal GATT database that can be expanded to fit your application requirements. The application starts advertising after boot and restarts advertising after a connection is closed. It also supports Over-the-Air Device Firmware Upgrade (OTA DFU).\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_thermometer/readme.html"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_thermometer_mock.example/soc_thermometer/soc_thermometer_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock)","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_thermometer_freertos_mock.example/soc_thermometer/soc_thermometer_freertos_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock) FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_thermometer_rtos/readme.html"],"description":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_thermometer_micriumos_mock.example/soc_thermometer/soc_thermometer_micriumos_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock) Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_thermometer_client/readme.html"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_thermometer_client.example/soc_thermometer_client/soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_throughput/readme.html"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_throughput_log_single.example/soc_throughput/soc_throughput_log_single.slcp","text":"Bluetooth - SoC Throughput","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/bluetooth/documentation/example/soc_ibeacon/readme.html"],"description":"An iBeacon device implementation that sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.soc_ibeacon.example/soc_ibeacon/soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"An iBeacon device implementation that sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.","id":"template.esf.com.silabs.template.external.com.silabs.sdk.stack.super.bootloader.Gecko Bootloader.EZSP_SPI_Bootloader_3.2.3._640221276.1.12.0._1297798766","text":"EZSP SPI Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Application Bootloader for all EFR32 and EFM32 devices with 512kB or larger flash, using the internal flash memory to store upgrade images received by the application in an application specific way, such as OTA, USB, Ethernet, etc. This sample configuration supports storing a single firmware update image at a time, and is plug-and-play compatible with the \"Local Storage Bootloader\" configuration of Silicon Labs EmberZNet, Bluetooth and Connect sample applications on 512 kB EFR32xG13 devices. The layout of the storage should be modified before being run on other devices.","id":"template.esf.com.silabs.template.external.com.silabs.sdk.stack.super.bootloader.Gecko Bootloader.Internal_Storage_Bootloader_(single_image_on_512kB_device)_3.2.3._640221276.1.12.0._1297798766","text":"Internal Storage Bootloader (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"Application Bootloader for all EFR32 and EFM32 devices with 512kB or larger flash, using the internal flash memory to store upgrade images received by the application in an application specific way, such as OTA, USB, Ethernet, etc. This sample configuration supports storing a single firmware update image at a time, and is plug-and-play compatible with the \"Local Storage Bootloader\" configuration of Silicon Labs EmberZNet, Bluetooth and Connect sample applications on 512 kB EFR32xG13 devices. The layout of the storage should be modified before being run on other devices."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.iostream_eusart_baremetal.example/iostream_eusart_baremetal/iostream_eusart_baremetal.slcp","text":"Platform - I/O Stream EUSART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.iostream_eusart_kernel_micriumos.example/iostream_eusart_kernel_micriumos/iostream_eusart_kernel_micriumos.slcp","text":"Platform - I/O Stream EUSART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness. \n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_aead/readme.html"],"description":"This example project demonstrates the Authenticated Encryption with Associated Data (AEAD) API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform - PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Authenticated Encryption with Associated Data (AEAD) API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_asymmetric_key/readme.html"],"description":"This example project demonstrates the asymmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform - PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the asymmetric key API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_cipher/readme.html"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform - PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_dsa/readme.html"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform - PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_ecdh/readme.html"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform - PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_hash/readme.html"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform - PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_kdf/readme.html"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform - PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_mac/readme.html"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform - PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_symmetric_key/readme.html"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform - PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/psa_crypto_x509/readme.html"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform - PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/se_manager_key_provisioning/readme.html"],"description":"This example project demonstrates the key provisioning API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.se_manager_key_provisioning.example/se_manager_key_provisioning/se_manager_key_provisioning.slcp","text":"Platform - SE Manager Key Provisioning","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key provisioning API of SE Manager.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/se_manager_se_firmware_upgrade/readme.html"],"description":"This example project demonstrates the SE firmware upgrade API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.se_manager_se_firmware_upgrade.example/se_manager_se_firmware_upgrade/se_manager_se_firmware_upgrade.slcp","text":"Platform - SE Manager SE Firmware Upgrade","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the SE firmware upgrade API of SE Manager.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/spidrv_master_baremetal/readme.html"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/spidrv_master_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/spidrv_slave_baremetal/readme.html"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/spidrv_slave_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"mbedTLS AES example using hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform - mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"mbedTLS AES example using hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform - mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signaturewith mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform - mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signaturewith mbedTLS.\n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Application Bootloader for all EFR32 and EFM32 devices with external flash, using an external SPI flash to store upgrade images received by the application over the air in an application specific way. This sample configuration supports storing multiple firmware update images simultaneously by configuring multiple storage slots.","id":"template.esf.com.silabs.template.external.com.silabs.sdk.stack.super.bootloader.Gecko Bootloader.SPI_Flash_Storage_Bootloader_(multiple_images)_3.2.3._640221276.1.12.0._1297798766","text":"SPI Flash Storage Bootloader (multiple images)","priority":9999999,"category":"SOFTWARE","toolTipText":"Application Bootloader for all EFR32 and EFM32 devices with external flash, using an external SPI flash to store upgrade images received by the application over the air in an application specific way. This sample configuration supports storing multiple firmware update images simultaneously by configuring multiple storage slots."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Application Bootloader for all EFR32 and EFM32 devices with external flash, using an external SPI flash to store upgrade images received by the application in an application specific way, such as OTA, USB, Ethernet, etc. This sample configuration supports storing a single firmware update image at a time, and is plug-and-play compatible with the default configuration of the OTA Client in Zigbee sample applications.","id":"template.esf.com.silabs.template.external.com.silabs.sdk.stack.super.bootloader.Gecko Bootloader.SPI_Flash_Storage_Bootloader_(single_image)_3.2.3._640221276.1.12.0._1297798766","text":"SPI Flash Storage Bootloader (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"Application Bootloader for all EFR32 and EFM32 devices with external flash, using an external SPI flash to store upgrade images received by the application in an application specific way, such as OTA, USB, Ethernet, etc. This sample configuration supports storing a single firmware update image at a time, and is plug-and-play compatible with the default configuration of the OTA Client in Zigbee sample applications."},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":["file:/C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/gecko_sdk_suite/v3.2/app/common/example/tensorflow_lite_micro_helloworld/readme.html"],"description":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED.","id":"template.uc.com.silabs.sdk.stack.super:3.2.3._640221276.tensorflow_lite_micro_helloworld.example/tensorflow_lite_micro_helloworld/tensorflow_lite_micro_helloworld.slcp","text":"TensorFlow Lite Micro - Hello World","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED. \n"},{"imageURL":"bundleentry://751.fwk857248000/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.esf.com.silabs.template.external.com.silabs.sdk.stack.super.bootloader.Gecko Bootloader.UART_XMODEM_Bootloader_3.2.3._640221276.1.12.0._1297798766","text":"UART XMODEM Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks."}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":28,"anySelected":false,"id":0,"filters":[],"title":"Bluetooth","parentId":0,"selected":false}],"title":"Wireless Technology","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":28,"anySelected":false,"id":0,"filters":[],"title":"SoC","parentId":1,"selected":false}],"title":"Device Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"32-bit MCU","parentId":2,"selected":false}],"title":"MCU","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":3,"filters":[{"futureCount":27,"anySelected":false,"id":0,"filters":[],"title":"Advanced","parentId":3,"selected":false},{"futureCount":1,"anySelected":false,"id":1,"filters":[],"title":"Beginner","parentId":3,"selected":false}],"title":"Project Difficulty","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":4,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"ALPHA","parentId":4,"selected":false},{"futureCount":28,"anySelected":false,"id":1,"filters":[],"title":"EXPERIMENTAL","parentId":4,"selected":false},{"futureCount":8,"anySelected":false,"id":2,"filters":[],"title":"None Specified","parentId":4,"selected":false},{"futureCount":44,"anySelected":false,"id":3,"filters":[],"title":"PRODUCTION","parentId":4,"selected":false}],"title":"Quality","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":5,"filters":[{"futureCount":53,"anySelected":false,"id":0,"filters":[],"title":"Gecko SDK Suite v3.2.3","parentId":5,"selected":false},{"futureCount":28,"anySelected":false,"id":1,"filters":[],"title":"bluetooth_applications","parentId":5,"selected":false}],"title":"Provider","parentId":-1,"selected":false}],"totalCount":81}
